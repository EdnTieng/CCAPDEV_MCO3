<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Profile</title>
    <link rel="stylesheet" href="styles/PostTemplate.css">
    <link rel="stylesheet" href="/styles/Home.css">

    <link rel="stylesheet" href="/styles/Profile.css">
    <script src="https://kit.fontawesome.com/2616052655.js" crossorigin="anonymous"></script>
    <script src="/script.js"></script>

    <script>
        function toggleLike(type, id) {
            let likeBtn = document.getElementById(`like-btn-${type}-${id}`);
            let dislikeBtn = document.getElementById(`dislike-btn-${type}-${id}`);

            if (likeBtn.classList.contains("active")) {
                likeBtn.classList.remove("active");
                likeBtn.style.background = "#444";  
            } else {
                likeBtn.classList.add("active");
                likeBtn.style.background = "#007BFF"; 
                dislikeBtn.classList.remove("active");
                dislikeBtn.style.background = "#444"; 
            }
        }

        function toggleDislike(type, id) {
            let dislikeBtn = document.getElementById(`dislike-btn-${type}-${id}`);
            let likeBtn = document.getElementById(`like-btn-${type}-${id}`);

            if (dislikeBtn.classList.contains("active")) {
                dislikeBtn.classList.remove("active");
                dislikeBtn.style.background = "#444"; 
            } else {
                dislikeBtn.classList.add("active");
                dislikeBtn.style.background = "#FF3B30"; 
                likeBtn.classList.remove("active");
                likeBtn.style.background = "#444"; 
            }
        }
         function toggleComments(postId) {
            console.log("Toggling comments for:", postId); 

            let commentSection = document.getElementById(`comments-${postId}`);

            if (commentSection) {
                console.log("Comment section found:", commentSection);

                if (commentSection.style.display === "none" || commentSection.style.display === "") {
                    commentSection.style.display = "block"; 
                } else {
                    commentSection.style.display = "none"; 
                }

                console.log("New display state:", commentSection.style.display); 
            } else {
                console.error("Comment section not found for post:", postId);
            }
        }

        function togglePostOptions(postId) {
            const menu = document.getElementById(`options-menu-${postId}`);
            menu.style.display = menu.style.display === 'none' ? 'block' : 'none';
        }
                
        function editPost(postId) {
            let postCaption = document.getElementById(`post-caption-${postId}`);
    
            let originalText = postCaption.innerText.replace("(Edited)", "").trim();
    
            postCaption.innerHTML = `
                <textarea id="edit-caption-${postId}" class="edit-caption">${originalText}</textarea>
                <button onclick="saveEditPost('${postId}')">üíæ Save</button>
                <button onclick="cancelEditPost('${postId}', \`${originalText}\`)">‚ùå Cancel</button>
                `;
        }

        function saveEditPost(postId) {
            let newCaption = document.getElementById(`edit-caption-${postId}`).value.trim();

            if (!newCaption) {
                alert("Caption cannot be empty!");
                return;
            }

            fetch(`/edit-post/${postId}`, {
                method: "PATCH",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ caption: newCaption }) 
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById(`post-caption-${postId}`).innerHTML = `
                        <p id="caption-text-${postId}">${newCaption} (Edited)</p>
                        <textarea id="edit-caption-${postId}" class="edit-caption" style="display: none;">${newCaption}</textarea>
                        <button id="save-edit-btn-${postId}" style="display: none;" onclick="saveEditPost('${postId}')">üíæ Save</button>
                    `;
                } else {
                    alert(data.error);
                }
            })
            .catch(err => console.error("Error saving edit:", err));
        }

        function cancelEditPost(postId, originalText) {
            document.getElementById(`post-caption-${postId}`).innerHTML = `<p>${originalText}</p>`;
        }
                
        function deletePost(postId) {
            if (!confirm("Are you sure you want to delete this post? This action cannot be undone.")) {
                return;
            }

            fetch(`/delete-post/${postId}`, {
                method: "DELETE",
                headers: { "Content-Type": "application/json" }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    document.getElementById(`post-${postId}`).remove();
                    alert("Post deleted successfully!");
                } else {
                    alert("Error: " + data.error);
                }
            })
            .catch(err => console.error("Error deleting post:", err));
        }

        
        function reportPost(postId) {
            alert(`Reporting post ${postId}`);
        }
    </script>

</head>
<body>
    <div class="container">
        <div class="profile-header">
        <div class="profile-pic-container">
            <img id="profile-image" src="{{userProfile.profilePic}}" alt="Profile Picture" class="profile-pic">
            
            <!-- Pencil Icon -->
            <div class="edit-icon-container" onclick="toggleProfilePicMenu()">
                ‚úè
            </div>

            <!-- Profile Picture Update Menu -->
            <div id="profile-pic-menu" class="profile-pic-menu">
                <input type="file" id="profile-pic-input" name="profilePic" accept="image/*" onchange="previewProfileImage()">
                <div class="profile-pic-preview">
                    <img id="preview-image" src="{{userProfile.profilePic}}" alt="Preview">
                </div>
                <button onclick="saveProfilePic()">Save</button>
                <button onclick="cancelProfilePic()">Cancel</button>
            </div>
        </div>

        <div class="profile-info">
            <h1>{{userProfile.username}}</h1>
            <p>{{userProfile.userTag}}</p>
        </div>
    </div>

        <div class="profile-navigation">
            <button class="nav-btn" data-page="/profile/posts">Posts</button>
            <button class="nav-btn" data-page="/profile/likes">Likes</button>
            <button class="nav-btn" data-page="/profile/dislikes">Dislikes</button>
        </div>
        
        <div class="content-container" id="profile-content">
            <p>Select a section to view.</p>
        </div>
    </div>
    
    <!-- Create Post Modal -->
        <div id="create-post-modal" class="modal">
            <div class="modal-content">
                <!-- Modal Header -->
                <div class="modal-header">
                 <h2>Create a Post</h2>
                    <span class="close">&times;</span>
                </div>

                <!-- Modal Body -->
                <div class="modal-body">
                    <div class="modal-profile">
                        <img src="{{userProfile.profilePic}}" alt="Profile Picture" class="profile-picture">
                        <span>{{userProfile.username}}</span>

                    </div>
                    <textarea id="post-caption" placeholder="What's on your mind?"></textarea>

                    <!-- Emoji Picker -->
                    <div class="emoji-picker">
                        <span onclick="addEmoji('üòÄ')">üòÄ</span>
                        <span onclick="addEmoji('‚ù§Ô∏è')">‚ù§Ô∏è</span>
                        <span onclick="addEmoji('üòÇ')">üòÇ</span>
                        <span onclick="addEmoji('üò¢')">üò¢</span>
                        <span onclick="addEmoji('üò°')">üò°</span>
                    </div>

                    <!-- Image Upload Input -->
                    <label for="post-image" class="custom-upload-btn">üì∑ Upload Image</label>
                    <input type="file" id="post-image" accept="image/*" onchange="previewImage(event)" style="display: none;">

                    <!-- Image Preview -->
                    <div id="image-preview-container" style="display: none; max-height: 250px; overflow-y: auto;">
                        <img id="image-preview" src="" alt="Image Preview" style="max-width: 100%; display: block;">
                    </div>
                    <!-- Post Button -->
                    <button class="post-btn" onclick="submitPost()">Post</button>
                </div>
            </div>
        </div>
    </div>

    <footer>
        <p>¬© 2025 TikTalk Archers</p>
    </footer>
    
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let createPostBtn = document.getElementById("create-post-btn");
            let modal = document.getElementById("create-post-modal");
            let closeBtn = document.querySelector(".close");

            modal.style.display = "none";

            if (createPostBtn && modal) {
                createPostBtn.addEventListener("click", function () {
                    modal.style.display = "flex";
                });
            }

            if (closeBtn) {
                closeBtn.addEventListener("click", function () {
                    modal.style.display = "none";
                });
            }

            window.addEventListener("click", function (event) {
                if (event.target === modal) {
                    modal.style.display = "none";
                }
            });
        });

        function addEmoji(emoji) {
            let textarea = document.querySelector(".modal-body textarea");
            textarea.value += emoji;
        }

    </script>   
    <script>

        document.addEventListener("DOMContentLoaded", function () {
            const buttons = document.querySelectorAll(".nav-btn");
            buttons.forEach(button => {
                button.addEventListener("click", function () {
                    const page = this.getAttribute("data-page");

                    fetch(page, { headers: { "X-Requested-With": "XMLHttpRequest" } })
                        .then(response => {
                            if (!response.ok) {
                                throw new Error(`HTTP error! Status: ${response.status}`);
                            }
                            return response.text();
                        })
                        .then(data => {
                            document.getElementById("profile-content").innerHTML = data;
                        })
                        .catch(error => console.error("Error loading content:", error));
            });
            });
        });

        document.addEventListener("DOMContentLoaded", function () {
            let menuBtn = document.getElementById("menu-btn");
            let menuDropdown = document.getElementById("menu-dropdown");
    
            menuBtn.addEventListener("click", function (event) {
                event.stopPropagation();
                menuDropdown.style.display = menuDropdown.style.display === "block" ? "none" : "block";
            });
    
            document.addEventListener("click", function (event) {
                if (!menuDropdown.contains(event.target) && event.target !== menuBtn) {
                    menuDropdown.style.display = "none";
                }
            });
        });
    </script>
     
</body>
</html>